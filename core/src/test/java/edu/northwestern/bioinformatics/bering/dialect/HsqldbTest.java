package edu.northwestern.bioinformatics.bering.dialect;

import edu.northwestern.bioinformatics.bering.Column;
import edu.northwestern.bioinformatics.bering.TableDefinition;

/**
 * @author Rhett Sutphin
 */
public class HsqldbTest extends HibernateBasedDialectTestCase<Hsqldb> {

    @Override
    protected Class<Hsqldb> getDialectClass() {
        return Hsqldb.class;
    }

    public void testGetName() throws Exception {
        assertEquals("hsqldb", getDialect().getDialectName());
    }

    public void testRenameColumn() throws Exception {
        assertStatements(
            getDialect().renameColumn("feast", "length", "duration"),
            "ALTER TABLE feast ALTER COLUMN length RENAME TO duration"
        );
    }

    public void testCreateTable() throws Exception {
        String expectedCreate = "CREATE TABLE feast (\n  id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1),\n  name VARCHAR(2147483647),\n  length INTEGER,\n  PRIMARY KEY(id)\n)";
        TableDefinition table = createTestTable();

        assertStatements(
            getDialect().createTable(table),
            expectedCreate
        );
    }

    @Override
    protected String expectedAddStringStatement() {
        return "ALTER TABLE t ADD COLUMN c VARCHAR(2147483647)";
    }

    @Override
    protected String expectedAddIntegerStatement() {
        return "ALTER TABLE t ADD COLUMN c INTEGER";
    }

    @Override
    protected String expectedAddFloatStatement() {
        return "ALTER TABLE t ADD COLUMN c FLOAT";
    }

    @Override
    protected String expectedAddNumericStatement() {
        return "ALTER TABLE t ADD COLUMN c NUMERIC";
    }

    @Override
    protected String expectedAddBooleanStatement() {
        return "ALTER TABLE t ADD COLUMN c BIT";
    }

    @Override
    protected String expectedAddDateStatement() {
        return "ALTER TABLE t ADD COLUMN c DATE";
    }

    @Override
    protected String expectedAddTimeStatement() {
        return "ALTER TABLE t ADD COLUMN c TIME";
    }

    @Override
    protected String expectedAddTimestampStatement() {
        return "ALTER TABLE t ADD COLUMN c TIMESTAMP";
    }

    public void testAddNotNullColumnWithDefault() throws Exception {
        Column col = Column.createColumn(null, "name", "string");
        col.setNullable(false);
        col.setDefaultValue("Untitled");
        assertStatements(
            getDialect().addColumn("feast", col),
            "ALTER TABLE feast ADD COLUMN name VARCHAR(2147483647) DEFAULT 'Untitled' NOT NULL"
        );
    }

    public void testAddNotNullColumn() throws Exception {
        Column col = Column.createColumn(null, "name", "string");
        col.setNullable(false);
        assertStatements(
            getDialect().addColumn("feast", col),
            "ALTER TABLE feast ADD COLUMN name VARCHAR(2147483647) NOT NULL"
        );
    }

    public void testAddColumnWithDefault() throws Exception {
        Column col = Column.createColumn(null, "name", "string");
        col.setDefaultValue("Untitled");
        assertStatements(
            getDialect().addColumn("feast", col),
            "ALTER TABLE feast ADD COLUMN name VARCHAR(2147483647) DEFAULT 'Untitled'"
        );
    }
}
